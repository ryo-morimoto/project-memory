{
  "permissions": {
    "allow": [
      "Bash(gh api * -X GET)",
      "Bash(gh repo view *)",
      "Bash(gh pr *)",
      "Bash(gh issue *)",
      "Bash(npm *)",
      "Bash(yarn *)",
      "Bash(pnpm *)",
      "Bash(cargo *)",
      "Bash(go *)",
      "Bash(python *)",
      "Bash(pip *)",
      "Bash(pytest *)",
      "Bash(git *)",
      "Bash(ls *)",
      "Bash(cd *)",
      "Bash(pwd)",
      "Bash(cat *)",
      "Bash(echo *)",
      "Bash(mkdir *)",
      "Bash(touch *)",
      "Bash(cp *)",
      "Bash(mv *)",
      "Bash(rm *.tmp)",
      "Bash(rm *.log)",
      "Bash(rg *)",
      "Bash(grep *)",
      "Bash(which *)",
      "Bash(curl * --output *)",
      "Bash(curl * -o *)",
      "Bash(tar *)",
      "Bash(unzip *)",
      "Bash(zip *)",
      "Bash(docker *)",
      "Bash(docker-compose *)",
      "Bash(make *)",
      "Bash(pcheck *)",
      "Bash(pmemory *)",
      "Bash(similarity-ts *)"
    ],
    "deny": [
      "Bash(sudo *)",
      "Bash(su *)",
      "Bash(chmod 777 *)",
      "Bash(chmod +x /usr/bin/*)",
      "Bash(chmod +x /bin/*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf $HOME)",
      "Bash(rm -rf /etc*)",
      "Bash(rm -rf /usr*)",
      "Bash(rm -rf /var*)",
      "Bash(rm -rf /boot*)",
      "Bash(rm -rf /dev*)",
      "Bash(rm -rf /proc*)",
      "Bash(rm -rf /sys*)",
      "Bash(rm -rf /tmp)",
      "Bash(rm -rf .git)",
      "Bash(rm -rf node_modules)",
      "Bash(rm -rf package-lock.json)",
      "Bash(rm -rf yarn.lock)",
      "Bash(rm -rf Cargo.lock)",
      "Bash(git push --force*)",
      "Bash(git push -f*)",
      "Bash(git reset --hard HEAD~*)",
      "Bash(git rebase -i*)",
      "Bash(git filter-branch *)",
      "Bash(curl * | sh)",
      "Bash(curl * | bash)",
      "Bash(wget * | sh)",
      "Bash(wget * | bash)",
      "Bash(eval *)",
      "Bash(exec *)",
      "Bash(source /dev/stdin)",
      "Bash(. /dev/stdin)",
      "Bash(gh api * -X POST*)",
      "Bash(gh api * -X PUT*)",
      "Bash(gh api * -X PATCH*)",
      "Bash(gh api * -X DELETE*)",
      "Bash(gh repo edit *)",
      "Bash(gh repo delete *)",
      "Bash(gh auth *)",
      "Bash(gh ssh-key *)",
      "Bash(gh gpg-key *)",
      "Bash(npm * -g *)",
      "Bash(npm * --global *)",
      "Bash(npm link*)",
      "Bash(npm publish*)",
      "Bash(yarn global *)",
      "Bash(yarn link*)",
      "Bash(yarn publish*)",
      "Bash(pnpm * -g *)",
      "Bash(pnpm * --global *)",
      "Bash(pnpm link*)",
      "Bash(pnpm publish*)",
      "Bash(pip * --user *)",
      "Bash(pip * --system *)",
      "Bash(pip install -U pip*)",
      "Bash(pip install --upgrade pip*)",
      "Bash(pip upload*)",
      "Bash(twine upload*)",
      "Bash(cargo install *)",
      "Bash(cargo publish*)",
      "Bash(go install *)",
      "Bash(go get *)",
      "Bash(gem install *)",
      "Bash(gem push*)",
      "Bash(brew *)",
      "Bash(apt *)",
      "Bash(apt-get *)",
      "Bash(yum *)",
      "Bash(dnf *)",
      "Bash(pacman *)",
      "Bash(snap *)",
      "Bash(flatpak *)",
      "Bash(choco *)",
      "Bash(scoop *)",
      "Bash(composer global *)",
      "Bash(composer publish*)",
      "Bash(bundle * --system*)",
      "Bash(bundler * --system*)",
      "Bash(docker push*)",
      "Bash(kubectl delete*)",
      "Bash(kubectl apply -f * /dev/stdin)",
      "Bash(terraform destroy*)",
      "Bash(aws * rm * --recursive*)",
      "Bash(gcloud * delete*)",
      "Bash(az * delete*)",
      "Bash(heroku * destroy*)",
      "Bash(vercel rm*)",
      "Bash(netlify delete*)",
      "Write(/etc/*)",
      "Write(/usr/*)",
      "Write(/bin/*)",
      "Write(/sbin/*)",
      "Write(/boot/*)",
      "Write(/dev/*)",
      "Write(/proc/*)",
      "Write(/sys/*)",
      "Write(~/.ssh/*)",
      "Write(~/.gnupg/*)",
      "Write(~/.aws/*)",
      "Write(~/.kube/*)",
      "Write(~/.docker/*)",
      "Write(~/.gitconfig)",
      "Write(~/.npmrc)",
      "Write(~/.yarnrc)",
      "Write(~/.cargo/config*)",
      "Write(~/.pip/pip.conf)",
      "Write(~/.pypirc)"
    ]
  },
  "env": {
    "CLAUDE_CODE_ENABLE_TELEMETRY": "0"
  },
  "cleanupPeriodDays": 30,
  "includeCoAuthoredBy": true
}